allprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    group = 'org.janelia.jacsstorage'
    version = '1.0.0'
}

subprojects {
    apply from: "${rootDir}/deps.gradle"

    afterEvaluate {
        repositories {
            mavenLocal()
            mavenCentral()
        }

        compileJava {
            doFirst {
                options.compilerArgs = [
                    '-Xlint:deprecation'
                ]
                classpath = files()
            }
        }

        compileTestJava {
            doFirst {
                options.compilerArgs = [
                    '-Xlint:deprecation'
                ]
                classpath = files()
            }
        }

        configurations {
            provided
            implementation.extendsFrom(provided)
            integrationTestCompileOnly.extendsFrom(testCompileOnly)
            integrationTestImplementation.extendsFrom(testImplementation)
            integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
        }

        sourceSets {
            integrationTest {
                java {
                    compileClasspath += main.output + test.output
                    runtimeClasspath += main.output + test.output
                    srcDir file('src/integrationTest/java')
                }
                resources {
                    srcDir file('src/integrationTest/resources')
                }
             }
        }

        idea {
            module {
                downloadSources = true
                downloadJavadoc = true
                scopes.TEST.plus += [
		    configurations.integrationTestCompileOnly,
		    configurations.integrationTestRuntime
		]
            }
        }

        task integrationTest(type: Test) {
            testClassesDirs += sourceSets.integrationTest.output.classesDirs
            classpath = sourceSets.integrationTest.runtimeClasspath
        }

        check.dependsOn integrationTest
        integrationTest.mustRunAfter test
   }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

}

task wrapper(type: Wrapper) {
    gradleVersion = "4.5"
}

def filteringProperties(otherProperties) {
        def tmpProject = new org.apache.tools.ant.Project()
        tmpProject.initProperties()
        // convert the build config to ant properties to be used with the ant ExpandProperties
        project.ext.properties.each { k,v ->
                if (k.startsWith("jacs.runtime.env.")) {
                        tmpProject.setProperty("${k}", "${v}")
                }
        }
        otherProperties.each { k,v ->
                if (k.startsWith("jacs.runtime.env.")) {
                        tmpProject.setProperty("${k}", "${v}")
                }
        }
        tmpProject
}
