plugins {
    id 'application'
    id 'distribution'
}

application {
    applicationName = 'benchmarks'
    mainClass = 'BenchmarkApp'
}

project(":jacsstorage-services") {
    dependencies {
        api project(":jacsstorage-core")

        implementation COMMONS_COMPRESS_LIB,
                       COMMONS_RNG_LIB,
                       JACS_MODEL_RENDERING_LIB,
                       JAX_RS_JERSEY_CLIENT_LIB,
                       JAX_RS_JERSEY_MEDIA_JSON_LIB,
                       JAVAX_ACTIVATION,
                       JAVAMAIL_LIB,
                       MONGODB_DRIVER_LIB,
                       MONGODB_BSON_LIB,
                       N5_LIB,
                       N5_UNIVERSE_LIB,
                       REFLECTIONS_LIB

        implementation(platform('io.projectreactor:reactor-bom:2023.0.8'),
                       'io.projectreactor:reactor-core',
                       platform(AWS_SDK_PLATFORM) {
                           exclude(group: 'software.amazon.awssdk.crt')
                       },
                       AWS_S3_LIB,
                       AWS_S3_TRANSFER_LIB,
                       AWS_CRT_LIB)

        perfAnnotationProcessor BENCHMARK_ANN_PROCESSOR_LIB

        perfApi project,
                CDI_API_LIB,
                CDI_SE_CORE_LIB,
                CMDLINE_ARG_LIB
    }

    processIntegrationTestResources {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    integrationTest {
        // s3 tests require a lot of memory because it's trying to read large zarr chunks
        minHeapSize = '1g'
        maxHeapSize = '2g'
    }

    tasks.register('createStorageRetrieveBenchmark', CreateStartScripts) {
        dependsOn(perfJar, startScripts)

        mainClass = "org.janelia.jacsstorage.service.cmd.StorageRetrieveBenchmark"
        classpath = startScripts.classpath + configurations.perfRuntimeClasspath + project.perfJar.outputs.files
        outputDir = startScripts.outputDir
        applicationName = "storageRetrieveBenchmarks"
    }

    distributions {
        benchmarks {
            contents {
                into("bin") {
                    from(createStorageRetrieveBenchmark)
                }
                into("lib") {
                    from(project.perfJar.outputs.files)
                    from(project.configurations.perfRuntimeClasspath)
                }
            }
        }
    }

    [distTar, distZip, benchmarksDistTar, benchmarksDistZip, installDist, installBenchmarksDist].each {
        it.dependsOn(createStorageRetrieveBenchmark)
    }

}

ext.moduleName = 'org.janelia.jacsstorage.services'
