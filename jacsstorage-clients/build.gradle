buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:9.1.1'
    }
}

plugins {
    id 'application'
    id 'distribution'
    id 'nebula.rpm' version '9.1.1'
}

project(":jacsstorage-clients") {
    dependencies {
        api JACS_MODEL_RENDERING_LIB

        implementation project(":jacsstorage-core"),
                       COMMONS_IO_LIB,
                       COMMONS_LANG_LIB,
                       CMDLINE_ARG_LIB,
                       JACKSON_DATATYPE_JODA_LIB,
                       JAX_RS_JERSEY_CLIENT_LIB,
                       JAX_RS_JERSEY_MEDIA_LIB,
                       JAX_RS_JERSEY_INJECT_LIB,
                       JAX_RS_JERSEY_MEDIA_JSON_LIB,
                       N5_IMGLIB2_LIB
    }

    tasks.register('createStorageClientApp', CreateStartScripts) {
        dependsOn(startScripts)

        mainClass = "org.janelia.jacsstorage.clients.cli.StorageClientApp"
        classpath = startScripts.classpath
        outputDir = startScripts.outputDir
        applicationName = "storageClientApp"
    }

    distributions {
        main {
            contents {
                duplicatesStrategy = DuplicatesStrategy.EXCLUDE
                into("bin") {
                    from(createStorageClientApp)
                    filePermissions {
                        user {
                            read = true
                            write = true
                            execute = true
                        }
                        group {
                            read = true
                            execute = true
                        }
                        other {
                            read = true
                            execute = true
                        }
                    }
                }
            }
        }
    }

    [distTar, distZip, installDist].each {
        it.dependsOn(createStorageClientApp)
    }

    tasks.register('ospackage', Rpm) {
        dependsOn(installDist)

        release 1
        arch I386
        os LINUX
        duplicatesStrategy DuplicatesStrategy.EXCLUDE

        def rpmInstallDir;

        if (project.hasProperty('jacs.runtime.env.jadeToolsDir')) {
            rpmInstallDir = project.getProperty("jacs.runtime.env.jadeToolsDir") + "-${project.version}"
        } else {
            rpmInstallDir= "/misc/sc/jadeTools-${project.version}"
        }
        def parentRpmInstallDir = new File(rpmInstallDir).parent
        def installEnv = ["jacs.runtime.env.installDir": rpmInstallDir]

        into "${rpmInstallDir}"

        from ("${layout.buildDirectory}/install/${project.name}/bin") {
            into "bin"
            filter(org.apache.tools.ant.filters.ExpandProperties, project: filteringProperties(installEnv))
        }

        from ("${layout.buildDirectory}/install/${project.name}/lib") {
            into "lib"
        }

        from ("src/main/install/scripts") {
            into "bin"
            filter(org.apache.tools.ant.filters.ExpandProperties, project: filteringProperties(installEnv))
            fileMode = 0755
        }

        from ("src/main/install/etc") {
            into "etc"
            filter(org.apache.tools.ant.filters.ExpandProperties, project: filteringProperties(installEnv))
        }

        link("${parentRpmInstallDir}/jadeTools", "${rpmInstallDir}")
    }
}

ext.moduleName = 'org.janelia.jacsstorage.clients'
